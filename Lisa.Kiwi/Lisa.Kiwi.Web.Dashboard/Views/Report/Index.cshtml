@using Lisa.Kiwi.Web.Dashboard.Utils
@model IEnumerable<Lisa.Kiwi.WebApi.Report>

<div class="block-container">
    <div class="row">
        <div class="col-sm-5">
            <h2>Meldingen</h2>
        </div>
        @if (ViewBag.SearchText != null)
        {
        <div class="col-sm-3">
            @Html.ActionLink("(Terug)", "Index")
        </div>

        <div class="col-sm-4">
            @Html.Partial("SearchPartial", new SearchModel())
        </div>
        }
        else
        {
            <div class="col-sm-7">
                @Html.Partial("SearchPartial", new SearchModel())
            </div>
        }

        </div>
        @if (ViewBag.SearchText != null)
        {
        <p>Resultaten voor "@ViewBag.SearchText"... </p>
        }
        <div class="row">
            <div class="col-sm-12">
                <table class="table">
                    <thead>
                        <tr>
                            @{ var sortingBy = (string)ViewBag.SortingBy; }
                            <th>@Html.SortLinkFor("Melding aangemaakt", sortingBy, i => i.Created)</th>
                            <th>@Html.SortLinkFor("Datum incident", sortingBy, i => i.Time)</th>
                            <th>@Html.SortLinkFor("Type melding", sortingBy, i => i.Type)</th>
                            <th>@Html.SortLinkFor("Locatie", sortingBy, i => i.Location)</th>
                            <th>Beschrijving</th>
                            <th>@Html.SortLinkFor("Status", sortingBy, i => i.Status)</th>
                            <th>Bekijken</th>
                        </tr>
                    </thead>
                    <tbody>
                        <script type="text/javascript"> idsArray = new Array();</script>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td><span class="convertCreatedTime-@item.Id">@item.Created.ToString("yyyy-MM-dd HH:mm:ss")</span></td>
                                <td><span class="convertIncidentTime-@item.Id">@item.Time.ToString("yyyy-MM-dd HH:mm:ss")</span></td>
                                <td>@item.Type</td>
                                <td>@item.Location</td>
                                <td>@item.Description</td>
                                <td>@item.Status.GetStatusDisplayNameFromMetadata()</td>
                                <td><a href="@Url.Action("Details", new {id = item.Id})">Bekijk</a></td>
                            </tr>
                            <script type="text/javascript">idsArray.push(@item.Id)</script>
                        }
                    </tbody>
                </table>
                <div class="text-center">
                    @for (int i = 0; i < ViewBag.pages; i++)
                    {
                        if (ViewBag.currentPage == i)
                        {
                            <div class="pagination-item current">@(i + 1)</div>
                        }
                        else
                        {
                            var pageUrl = "";
                            var action = ViewContext.Controller.ValueProvider.GetValue("action").RawValue;
                            if (sortingBy == "Created DESC")
                            {
                                pageUrl = string.Format("/Report/{0}/{1}", action, (i + 1).ToString());
                            }
                            else
                            {
                                pageUrl = string.Format("/Report/{0}/{1}?sortBy={2}", action, (i + 1).ToString(), sortingBy);
                            }
                        
                            <div class="pagination-item"><a href="@pageUrl">@(i + 1)</a></div>
                        }
                    }
                    <div class="connection">Not connected.</div>
                </div>
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="text-center">
                        @foreach (var error in ViewData.ModelState.SelectMany(e => e.Value.Errors))
                        {
                            @error.ErrorMessage
                        }
                    </div>
                }
            </div>
        </div>
    </div>

<script src="Scripts/jquery.signalR-2.2.0.min.js"></script>
<script src="http://localhost:20151/signalr/signalr/hubs"></script>

<script type="text/javascript">

    $.connection.hub.url = "http://localhost:20151/signalr/signalr";
    var hub = $.connection.reportHub;

    var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
    $.connection.hub.start({
        jsonp: isChrome
    });

    hub.client.newReportItem = function (id, created, time, type, location, beschrijving, status) {
        var table = $('.table tbody');
        table.prepend(
            '<tr class="new">' +
            '<td><span class="convertCreatedTime-' + id + '">' + created + '</span></td>' +
            '<td><span class="convertIncidentTime-' + id + '">' + time + '</span></td>' +
            '<td>' + type + '</td>' +
            '<td>' + location + '</td>' +
            '<td>' + beschrijving + '</td>' +
            '<td>' + status + '</td>' +
            '<td><a href="Report/Details/' + id + '">Bekijk</a></td>' +
            '</tr>'
        );

        convertCreatedTime(id);
        convertIncidentTime(id)
    }

    $.connection.hub.start().done(function () {
        $('.connection').text('Connected.');
        hub.server.send(1, "2015-01-06 09:46:00", "2015-01-06 09:46:00", "Testen", "Test Lisa", "Test beschrijving", "Open Test");
    });

    idsArray.forEach(function (id) {
        convertIncidentTime(id)
        convertCreatedTime(id);
        
    });

    function convertIncidentTime(id) {
        var options = { day: 'numeric', month: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric' };
        var timeClass = $('.convertIncidentTime-' + id);
        var m = timeClass.text().match(/(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})/);
        var date = new Date(Date.UTC(m[1], m[2] - 1, m[3], m[4], m[5], m[6]));
        var newTime = date.toLocaleString('nl-NL', options);
        timeClass.text(newTime);
    }

    function convertCreatedTime(id) {
        var options = { weekday: 'short', day: 'numeric', month: 'long', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
        var createdClass = $('.convertCreatedTime-' + id);
        var m = createdClass.text().match(/(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})/);
        var date = new Date(Date.UTC(m[1], m[2] - 1, m[3], m[4], m[5], m[6]));
        var newTime = date.toLocaleString('nl-NL', options);
        var result = $.format.prettyDate(newTime);
        createdClass.text(result);
    }
</script>