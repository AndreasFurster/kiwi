@model PerpetratorViewModel

@{
	ViewBag.Title = DisplayNames.PersonInvolved;
}

@using (Html.BeginForm())
{
    @* TODO: Fix validation as it looks like shit now *@
	<div class="field">
		@Html.LabelFor(m => m.Name)
		@Html.TextBoxFor(m => m.Name)
	</div>
	<div class="field">
		<label>Wat is het geslacht*</label>
		<ul>
			<li>@Html.RadioButtonFor(m => m.Sex, 0) Onbekend</li>
			<li>@Html.RadioButtonFor(m => m.Sex, 1) Man</li>
			<li>@Html.RadioButtonFor(m => m.Sex, 2) Vrouw</li>
		</ul>
		@Html.ValidationMessageFor(m => m.Sex)
	</div>
	<div class="field">
		@Html.LabelFor(m => m.SkinColor)
		@Html.DropDownListFor(m => m.SkinColor, Model.SkinColors)
	</div>
	<div class="field">
		@Html.LabelFor(m => m.Clothing)
		@Html.TextAreaFor(m => m.Clothing)*
		@Html.ValidationMessageFor(m => m.Clothing)
	</div>
	<div class="field">
		@Html.LabelFor(m => m.AgeRange)
		@Html.DropDownListFor(m => m.AgeRange, Model.AgeRanges)
	</div>
	<div class="field">
		@Html.LabelFor(m => m.UniqueProperties)
		@Html.TextAreaFor(m => m.UniqueProperties)*
		@Html.ValidationMessageFor(m => m.UniqueProperties)
	</div>
	<div class="submit">
		<button type="submit"><img src="@Url.Content("~/Content/next.svg")"/></button>
		<span class="floatLeft">*verplichte velden</span>
	</div>
}